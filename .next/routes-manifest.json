{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/branches",
      "regex": "^/admin/branches(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/branches(?:/)?$"
    },
    {
      "page": "/admin/users",
      "regex": "^/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users(?:/)?$"
    },
    {
      "page": "/appointments",
      "regex": "^/appointments(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/appointments(?:/)?$"
    },
    {
      "page": "/appointments/new",
      "regex": "^/appointments/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/appointments/new(?:/)?$"
    },
    {
      "page": "/branches",
      "regex": "^/branches(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/branches(?:/)?$"
    },
    {
      "page": "/branches/new",
      "regex": "^/branches/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/branches/new(?:/)?$"
    },
    {
      "page": "/calendar",
      "regex": "^/calendar(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calendar(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/invoices",
      "regex": "^/invoices(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/invoices(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/notes",
      "regex": "^/notes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/notes(?:/)?$"
    },
    {
      "page": "/patients",
      "regex": "^/patients(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/patients(?:/)?$"
    },
    {
      "page": "/patients/new",
      "regex": "^/patients/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/patients/new(?:/)?$"
    },
    {
      "page": "/reports",
      "regex": "^/reports(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reports(?:/)?$"
    },
    {
      "page": "/treatments",
      "regex": "^/treatments(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/treatments(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}